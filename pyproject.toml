[build-system]
requires = [  # ought to mirror 'requirements/build.txt'
    "setuptools >= 41.2",
    "setuptools_scm",
    "wheel >= 0.29.0",
]
build-backend = "setuptools.build_meta"

[project]
name = "plasmapy_sphinx"
maintainers = [
  {name = "Erik T. Everson", email = "eeverson@plasmapy.org"},
  {name = "Nicholas A. Murphy", email = "namurphy@cfa.harvard.edu"},
]
description = "Sphinx extensions for the PlasmaPy Project"
readme = "README.md"
requires-python = ">=3.6"
dynamic = ["version"]
license = {file = "LICENSE.md"}
keywords = ["plasmapy", "sphinx", "documentation"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [  # ought to mirror 'requirements/install.txt'
  "docutils",
  "importlib_metadata; python_version < '3.8'",
  "jinja2 != 3.1",
  "sphinx >= 4.4",
  "sphinx-gallery",
  "sphinx_rtd_theme >= 1.0.0",
]

[project.optional-dependencies]
tests = [  # ought to mirror 'requirements/tests.txt'
  "codespell",
  "dlint",
  "flake8",
  "flake8-absolute-import",
  "flake8-implicit-str-concat",
  "flake8-mutable",
  "flake8-rst-docstrings",
  "flake8-simplify",
  "flake8-use-fstring",
  "hypothesis",
  "pre-commit",
  "pydocstyle",
  "pytest >= 5.4.0",
  "pytest-regressions",
  "pytest-xdist",
  "tox",
]
docs = [  # ought to mirror 'requirements/docs.txt'
    "numpydoc",
    "packaging",
    "pillow",
    "pygments >= 2.11.0",
    "sphinx-changelog",
    "sphinx-copybutton",
    "sphinx-hoverxref >= 1.1.1",
    "sphinx-issues >= 3.0.1",
    "sphinx-notfound-page >= 0.8",
    "sphinx-reredirects",
    "sphinxcontrib-bibtex",
    "towncrier >= 19.2.0",
]

[project.entry-points."sphinx.html_themes"]
plasmapy_theme = "plasmapy_sphinx.theme"

[project.urls]
Chat = "https://www.plasmapy.org/chat"
Documentation = "https://docs.plasmapy_sphinx.plasmapy.org"
Issues = "https://github.com/plasmapy/plasmapy_sphinx/issues"
Source = "https://github.com/plasmapy/plasmapy_sphinx"
website = "https://www.plasmapy.org"

[tool]
[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
plasmapy_sphinx = [
    "theme/theme.conf",
    "theme/*.html",
    "theme/static/css/*.css",
    "theme/static/templates/automodsumm/*.rst",
]

[tool.isort]
line_length = 88
wrap_length = 80
sections = ["FUTURE", "STDLIB", "FIRSTPARTY", "LOCALFOLDER"]
known_first_party = ["plasmapy", ]
default_section = "STDLIB"
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
force_alphabetical_sort_within_sections = true
honor_noqa = true
lines_between_types = 1

[tool.pytest.ini_options]
minversion = "5.1"
testpaths = "\"plasmapy_sphinx\""
norecursedirs = ["\"build\"", "\"docs/\""]
doctest_optionflags = ["NORMALIZE_WHITESPACE", "ELLIPSIS", "NUMBER"]
addopts = ["--doctest-modules", "--doctest-continue-on-failure"]
filterwarnings = ["ignore:.*Creating a LegacyVersion.*:DeprecationWarning"]
looponfailroots = ["plasmapy_sphinx"]

[tool.coverage]
[tool.coverage.run]
omit = ["ci-helpers/*", "*/tests/*"]

[tool.coverage.report]
exclude_lines = ["coverage: ignore", "ImportError", "ModuleNotFoundError"]

[tool.codespell]
skip = "*.png,*cache*,*egg*,.git,.hypothesis,.idea,.tox,_build,*charged_particle*.ipynb,venv,pyproject.toml"
ignore-words-list = ["aci,", "afe,", "ba,", "circularly,", "ded,", "dne,", "ect,", "explin,", "fo,", "fof,", "hist,", "hve,", "gud,", "nd,", "noo,", "nwo,", "ot,", "recuse,", "ro,", "te,", "ue,", "ue,", "windo"]

[tool.ruff]
# Minimum allowed target-version is Python 3.7
target-version = "py37"
output-format="grouped"
show-fixes = true

[tool.ruff.lint]
ignore = [
  "F401",
]
ignore-init-module-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"
